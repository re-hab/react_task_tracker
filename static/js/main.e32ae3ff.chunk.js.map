{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","label","color","handleClick","onClick","className","style","backgroundColor","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","text","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","About","to","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","status","filter","toggleReminder","taskToToggle","updTask","length","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e32ae3ff.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({label, color, handleClick}) => {\r\n \r\n    return (\r\n        <div>\r\n            <button \r\n            onClick={handleClick}\r\n            className='btn'\r\n            style={{backgroundColor: color}}\r\n            >\r\n                {label}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n Button.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\n Button.propTypes = {\r\n    color: PropTypes.string,\r\n    label: PropTypes.string,\r\n    handleClick: PropTypes.func.isRequired\r\n }\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button \r\n                label={ showAdd ? 'Close' : 'Add'} \r\n                color={ showAdd ? 'red' : 'green'}\r\n                handleClick={onAdd}\r\n            />\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n\r\n}\r\n//CSS in js\r\n// const headingStyle ={\r\n//     color: 'red', \r\n//     backgroundColor: 'black'\r\n// }\r\n\r\nexport default Header\r\n","\r\nimport { FaTimes } from 'react-icons/fa'\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={ () => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text}{' '}\r\n                <FaTimes \r\n                    style={{ color: 'red'}} \r\n                    onClick={ () => onDelete(task.id)}\r\n                />\r\n            </h3>\r\n            <p>\r\n                {task.day}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n   \r\n    return (\r\n        <>\r\n            {tasks.map((task, index) => (\r\n            <Task \r\n                key= { index } \r\n                task= { task }\r\n                onDelete = { onDelete }\r\n                onToggle = { onToggle }\r\n                \r\n                />\r\n               \r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!text) {\r\n            alert('Please add a task')\r\n            return\r\n          }\r\n\r\n          onAdd({ text, day, reminder});\r\n\r\n          setText('')\r\n          setDay('')\r\n          setReminder(false)\r\n    }\r\n\r\n    return (\r\n       <form className='add-form' onSubmit={onSubmit}>\r\n           <div className='form-control'>\r\n               <label> Task </label>\r\n               <input \r\n                    type='text' \r\n                    placeholder='Add Task'\r\n                    value= {text}\r\n                    onChange= { (e) => setText(e.target.value)}\r\n                />\r\n           </div>\r\n\r\n           <div className='form-control'>\r\n               <label> Day & Time </label>\r\n               <input \r\n                    type='text' \r\n                    placeholder='Add Day & Time'\r\n                    value= {day}\r\n                    onChange= { (e) => setDay(e.target.value)}\r\n                />\r\n           </div>\r\n\r\n           <div className='form-control form-control-check'>\r\n               <label> Set Reminder </label>\r\n               <input \r\n                    type='checkbox' \r\n                    checked = { reminder }\r\n                    value =  { reminder }\r\n                    onChange= { (e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n           </div>\r\n\r\n           <input type='submit' value='Save Task' className='btn btn-block' />\r\n\r\n       </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; 2021</p>\r\n      {/* <Link to='/about'>About</Link> */}\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Task Tracker By Rehab Ahmed Using React js Version 1.0.0</h4>\r\n      <Link to='/'>Go Back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import Header from './components/Header'\nimport { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n\n  }, [])\n\n  //Fetch Tasks\n  const fetchTasks = async () => {\n\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json()\n\n    return data;\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  //Add Task\n  const addTask = async (task) => {\n\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n  }\n\n  //Delete Task\n  const deleteTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    res.status === 200\n      ? setTasks(tasks.filter((task) => task.id !== id))\n      : alert('Error Deleting This Task')\n  }\n\n  //Toggle Reminder\n  const toggleReminder = async (id) => {\n\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask),\n    })\n\n    const data = await res.json()\n\n    setTasks(tasks.map((task) =>\n      task.id === id ? { ...task, reminder: data.reminder } : task))\n  }\n\n\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n\n        {/* 1st Route */}\n        {/* <Route\n          path='/react_task_tracker'\n          \n          render={(props) => (\n            <> */}\n              {/*  */}\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length > 0 ?\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                /> : 'No Tasks To Show'\n              }\n              {/*  */}\n            {/* </>\n          )}\n\n        /> */}\n\n        {/* 2nd Route */}\n        <Route path='/about' component={About} />\n        <Footer />\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}